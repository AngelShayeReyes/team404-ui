{% extends "layout.njk" %}

{% set title = 'View Job Roles' %}

var dateFilter = require('nunjucks-date-filter');
var env = new nunjucks.Environment();
env.addFilter('date', dateFilter);

{% block content  %}  
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<div class="homepage-link">
  <a href="http://localhost:7999/navigation" title="Back to Homepage Link">Back to Homepage</a>
</div>

<h1 id="page_title">View Job Roles</h1>

<input onclick="showFilterFunc()" type="button" value="View Filters" id="filterbutton"></input>

<div class="jobRoles-wrap" id="filterblock" style="display: none;">
  <input onclick="clearallbuttonFunc()" type="button" value="Clear All" id="clearallbutton"></input>

  <div id="contract-type-checkboxes">
    {% set current_display = [] %}
    {% for job_role in job_roles %}
      {% if not current_display.includes(job_role.contractType) %}
        {% set current_display = (current_display.push(job_role.contractType), current_display) %}
      {% endif %}
    {% endfor %}
    {% if current_display.length >= 2%}
      <h4><strong>Filter by Contract Type:</strong></h4>
      {% for element in current_display %}
        <label><input type="checkbox" name="jr-contractType" value="{{ element }}" id="chkbox-{{ element }}" /> {{ element | replace("_", " ") | capitalize}} </label><br>
      {% endfor %}
    {% endif %}
  </div>

  <div id="location-checkboxes">
    {% set current_display = [] %}
    {% for job_role in job_roles %}
      {% for location in job_role.locations %}
        {% if not current_display.includes(location.name) %}
          {% set current_display = (current_display.push(location.name), current_display) %}
        {% endif %}
      {% endfor %}
    {% endfor %}
    {% if current_display.length >= 2%}
      <h4><strong>Filter by Location:</strong></h4>
      {% for element in current_display %}
        <label><input type="checkbox" name="jr-location" value="{{ element }}" id="chkbox-{{ element }}" /> {{ element }} </label><br>
      {% endfor %}
    {% endif %}
  </div>

  <div id="capability-checkboxes">
    {% set current_display = [] %}
    {% for job_role in job_roles %}
      {% if not current_display.includes(job_role.capability) %}
        {% set current_display = (current_display.push(job_role.capability), current_display) %}
      {% endif %}
    {% endfor %}
    {% if current_display.length >= 2%}
      <h4><strong>Filter by Capability:</strong></h4>
      {% for element in current_display %}
        <label><input type="checkbox" name="jr-capability" value="{{ element }}" id="chkbox-{{ element }}" /> {{ element | replace("_", " ") | capitalize}} </label><br>
      {% endfor %}
    {% endif %}
  </div>

  <div id="band-checkboxes">
    {% set current_display = [] %}
    {% for job_role in job_roles %}
      {% if not current_display.includes(job_role.band.name) %}
        {% set current_display = (current_display.push(job_role.band.name), current_display) %}
      {% endif %}
    {% endfor %}
    {% if current_display.length >= 2%}
      <h4><strong>Filter by Band:</strong></h4>
      {% for element in current_display %}
        <label><input type="checkbox" name="jr-band" value="{{ element }}" id="chkbox-{{ element }}" /> {{ element | replace("_", " ") | capitalize}} </label><br>
      {% endfor %}
    {% endif %}
  </div>
</div>

<table id="jobRolesTable" summary="This data table shows the current job roles within Kainos" style="visibility: visible;">
  <thead>
      <tr>
          <th scope="col">Title</th>
          <th scope="col">Location</th>
          <th scope="col">Contract Type</th>
          <th scope="col">Posted At</th>
          <th scope="col">Delete</th>
      </tr>
  </thead>
  <tbody>
      {% for job_role in job_roles %}
        <tr class="jobRole" data-category="{{ job_role.contractType}} {{ job_role.title }} {% for location in job_role.locations %}{{ location.name }} {% endfor %}{{job_role.band.name}} {{job_role.capability}}">
            <td scope="row"> <a href="/viewjobspecification/{{ job_role.id}}">{{ job_role.title}}</a></td>
            <td scope="row"> 
                {{ job_role.locations[0].name }}{% if job_role.locations[1] != null%}, More...{% endif %}
            </td>
            <td scope="row"> {{ job_role.contractType | replace("_", " ") | capitalize}} </td>
            <td scope="row"> {{ job_role.posted | date("DD MMM YYYY") }} </td>
            <td scope="row" style="text-align: center;"><button title="Confirm Delete with a Bin Icon" class="icon" onclick="confirmDeleteFunc({{job_role.id}}, '{{job_role.title}}')"><i class="fa fa-trash-o"></i></button> </td>
        </tr>
      {% endfor %}
  </tbody>
</table>

<div id="noresults" style="display: none;">
There are no results for this search.
</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
  var $filterCheckboxes = $('input[type="checkbox"]');
  var filterFunc = function() {

    var selectedFilters = {};

    // seperating rule for filter name 
    $filterCheckboxes.filter(':checked').each(function() {
      if (!selectedFilters.hasOwnProperty(this.name)) {
        selectedFilters[this.name] = [];
      }
      selectedFilters[this.name].push(this.value);
      document.getElementById("jobRolesTable").style.display = "block";
    });

    // create a collection containing all of the filterable elements
    var $filteredResults = $('.jobRole');

    // loop over the selected filter name -> (array) values pairs
    $.each(selectedFilters, function(name, filterValues) {

      // filter each .jobRole element
      $filteredResults = $filteredResults.filter(function() {

        var matched = false,
        currentFilterValues = $(this).data('category').split(' ');

        // loop over each category value in the current .jobRole's data-category
        $.each(currentFilterValues, function(_, currentFilterValue) {

          // if the current category exists in the selected filters array
          // set matched to true, and stop looping. as we're ORing in each
          // set of filters, we only need to match once

          if ($.inArray(currentFilterValue, filterValues) != -1) {
            matched = true;
            return false;
            }
        });

        // if matched is true the current .jobRole element is returned
        return matched;

      });
    });

    $('.jobRole').hide().filter($filteredResults).show();

    if($('.jobRole').children(':visible').length == 0) {
      document.getElementById("noresults").style.display = "block";
      document.getElementById("jobRolesTable").style.visibility = "hidden";
    } else {
      document.getElementById("noresults").style.display = "none";
    }
  }

  $filterCheckboxes.on('change', filterFunc); 
  function clearallbuttonFunc() {
    var c = document.getElementById('filterblock').getElementsByTagName('input');
    for (var i = 0; i < c.length; i++) {
        if (c[i].type == 'checkbox') {
            c[i].checked = false;
        }
    }
    $('.jobRole').show();
    document.getElementById("jobRolesTable").style.display = "visible";
    document.getElementById("noresults").style.display = "none";
  }

  function showFilterFunc() {
    var x = document.getElementById("filterblock");
    var elem = document.getElementById("filterbutton");
    if (x.style.display === "none") {
      x.style.display = "block";
      elem.value = 'Hide Filters';
    } else {
      x.style.display = "none";
      elem.value = 'View Filters';
    }
  }

  function confirmDeleteFunc(job_role_id, job_role_title) {
    var response = confirm('Are you sure you would like to delete the '+ job_role_title +' role?');
    if (response == true) {
      $.ajax({  
        url: 'viewjobroles/removerole/'+job_role_id,
        type: 'delete',                                                                        
        success: function(result) {window.location.reload();}
      });
      txt = job_role_title+" has been deleted";
    } else {
      txt = job_role_title+" will not be deleted";
    }
  }
</script>


{% endblock %}